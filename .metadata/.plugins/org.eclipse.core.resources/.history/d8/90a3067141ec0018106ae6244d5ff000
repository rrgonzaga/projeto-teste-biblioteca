package com.rodrigogonzaga.biblioteca.repository.helper.autor;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.StringUtils;

import com.rodrigogonzaga.biblioteca.model.Autor;
import com.rodrigogonzaga.biblioteca.repository.filter.AutorFilter;

public class AutoresImpl implements AutoresQueries {

	@PersistenceContext
	private EntityManager manager;
	
	
	@SuppressWarnings("unchecked")
	@Override	
	@Transactional(readOnly = true)
	public List<Autor> filtrar(AutorFilter filtro) {
		
		Criteria criteria = manager.unwrap(Session.class).createCriteria(Autor.class);		
		
		if(filtro != null) {
			if (StringUtils.isEmpty(filtro.getNome())) {
				criteria.add(Restrictions.like("nome", filtro.getNome())); 				
			}
		}
		
		return criteria.list();
		
		
	}

}
